{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/rush.schema.json",
  "projects": [
    {
      "packageName": "@ingress/di",
      "projectFolder": "modules/di"
    },
    {
      "packageName": "@ingress/http-status",
      "projectFolder": "modules/http-status"
    },
    {
      "packageName": "reflect-annotations",
      "projectFolder": "modules/reflect-annotations"
    },
    {
      "packageName": "ingress",
      "projectFolder": "modules/ingress"
    }
  ],
  //"ensureConsistentVersions": true,

  // "projectFolderMinDepth": 2,
  // "projectFolderMaxDepth": 2,

  /**
   * Event hooks are customized script actions that Rush executes when specific events occur
   */
  "eventHooks": {
    /**
     * The list of shell commands to run before the Rush installation starts
     */
    "preRushInstall": [
      // "common/scripts/pre-rush-install.js"
    ],

    /**
     * The list of shell commands to run after the Rush installation finishes
     */
    "postRushInstall": [],

    /**
     * The list of shell commands to run before the Rush build command starts
     */
    "preRushBuild": [],

    /**
     * The list of shell commands to run after the Rush build command finishes
     */
    "postRushBuild": []
  },
  "rushVersion": "5.16.0",
  "pnpmVersion": "4.1.6",
  "pnpmOptions": {

    /**
     * If true, then Rush will add the "--strict-peer-dependencies" option when invoking PNPM.
     * This causes "rush install" to fail if there are unsatisfied peer dependencies, which is
     * an invalid state that can cause build failures or incompatible dependency versions.
     * (For historical reasons, JavaScript package managers generally do not treat this invalid
     * state as an error.)
     *
     * The default value is false to avoid legacy compatibility issues.
     * It is strongly recommended to set strictPeerDependencies=true.
     */
    // "strictPeerDependencies": true,


    /**
     * Configures the strategy used to select versions during installation.
     *
     * This feature requires PNPM version 3.1 or newer.  It corresponds to the "--resolution-strategy" command-line
     * option for PNPM.  Possible values are "fast" and "fewer-dependencies".  PNPM's default is "fast", but this may
     * be incompatible with certain packages, for example the "@types" packages from DefinitelyTyped.  Rush's default
     * is "fewer-dependencies", which causes PNPM to avoid installing a newer version if an already installed version
     * can be reused; this is more similar to NPM's algorithm.
     *
     * After modifying this field, it's recommended to run "rush update --full" so that the package manager
     * will recalculate all version selections.
     */
    // "resolutionStrategy": "fast"
  }
}
